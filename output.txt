{'cv': None,
 'estimators': [('LinearRegression',
   Pipeline(steps=[('columntransformer',
                    ColumnTransformer(transformers=[('cat_linear_processor',
                                                     OneHotEncoder(),
                                                     ['Vessel Type']),
                                                    ('date_linear_processor',
                                                     Pipeline(steps=[('ProcessDates',
                                                                      ProcessDates()),
                                                                     ('ProcessHolidays',
                                                                      ProcessHolidays()),
                                                                     ('DropDate',
                                                                      DropDate(date_cols=['Date']))]),
                                                     ['Date']),
                                                    ('vessel_linear_processor',
                                                     ProcessVessel(),
                                                     ['Total Vessels (Nu...
                                                      'Capesize (DWT)',
                                                      'Capesize Laden (DWT)',
                                                      'Capesize Unladen (DWT)',
                                                      'Panamax (DWT)',
                                                      'Panamax Laden (DWT)',
                                                      'Panamax Unladen (DWT)',
                                                      'Handymax (DWT)',
                                                      'Handymax Laden (DWT)',
                                                      'Handymax Unladen (DWT)',
                                                      'Handysize (DWT)',
                                                      'Handysize Laden (DWT)',
                                                      'Handysize Unladen (DWT)']),
                                                    ('weather_linear_processor',
                                                     ProcessWeather(),
                                                     ['tempt', 'prcp', 'wspd'])])),
                   ('regressor', ElasticNet(random_state=3))])),
  ('GradientBoost',
   Pipeline(steps=[('columntransformer',
                    ColumnTransformer(transformers=[('cat_linear_processor',
                                                     OneHotEncoder(),
                                                     ['Vessel Type']),
                                                    ('date_linear_processor',
                                                     Pipeline(steps=[('ProcessDates',
                                                                      ProcessDates()),
                                                                     ('ProcessHolidays',
                                                                      ProcessHolidays()),
                                                                     ('DropDate',
                                                                      DropDate(date_cols=['Date']))]),
                                                     ['Date']),
                                                    ('vessel_linear_processor',
                                                     ProcessVessel(),
                                                     ['Total Vessels (Nu...
                                                      'Handymax Laden (DWT)',
                                                      'Handymax Unladen (DWT)',
                                                      'Handysize (DWT)',
                                                      'Handysize Laden (DWT)',
                                                      'Handysize Unladen (DWT)']),
                                                    ('weather_linear_processor',
                                                     ProcessWeather(),
                                                     ['tempt', 'prcp', 'wspd'])])),
                   ('regressor',
                    GradientBoostingRegressor(learning_rate=0.05, loss='huber',
                                              max_depth=4, max_features='sqrt',
                                              min_samples_leaf=15,
                                              min_samples_split=10,
                                              n_estimators=3000,
                                              random_state=5))])),
  ('XGBoost',
   Pipeline(steps=[('columntransformer',
                    ColumnTransformer(transformers=[('cat_linear_processor',
                                                     OneHotEncoder(),
                                                     ['Vessel Type']),
                                                    ('date_linear_processor',
                                                     Pipeline(steps=[('ProcessDates',
                                                                      ProcessDates()),
                                                                     ('ProcessHolidays',
                                                                      ProcessHolidays()),
                                                                     ('DropDate',
                                                                      DropDate(date_cols=['Date']))]),
                                                     ['Date']),
                                                    ('vessel_linear_processor',
                                                     ProcessVessel(),
                                                     ['Total Vessels (Nu...
                                 interaction_constraints=None, learning_rate=None,
                                 max_delta_step=None, max_depth=None,
                                 min_child_weight=None, missing=nan,
                                 monotone_constraints=None, n_estimators=100,
                                 n_jobs=-1, num_parallel_tree=None, predictor=None,
                                 random_state=0, reg_alpha=None, reg_lambda=None,
                                 scale_pos_weight=None, subsample=None,
                                 tree_method='gpu_hist', use_label_encoder=False,
                                 validate_parameters=None, verbosity=None))])),
  ('RandomForest',
   Pipeline(steps=[('columntransformer',
                    ColumnTransformer(transformers=[('cat_linear_processor',
                                                     OneHotEncoder(),
                                                     ['Vessel Type']),
                                                    ('date_linear_processor',
                                                     Pipeline(steps=[('ProcessDates',
                                                                      ProcessDates()),
                                                                     ('ProcessHolidays',
                                                                      ProcessHolidays()),
                                                                     ('DropDate',
                                                                      DropDate(date_cols=['Date']))]),
                                                     ['Date']),
                                                    ('vessel_linear_processor',
                                                     ProcessVessel(),
                                                     ['Total Vessels (Nu...
                                                      'Capesize Laden (DWT)',
                                                      'Capesize Unladen (DWT)',
                                                      'Panamax (DWT)',
                                                      'Panamax Laden (DWT)',
                                                      'Panamax Unladen (DWT)',
                                                      'Handymax (DWT)',
                                                      'Handymax Laden (DWT)',
                                                      'Handymax Unladen (DWT)',
                                                      'Handysize (DWT)',
                                                      'Handysize Laden (DWT)',
                                                      'Handysize Unladen (DWT)']),
                                                    ('weather_linear_processor',
                                                     ProcessWeather(),
                                                     ['tempt', 'prcp', 'wspd'])])),
                   ('regressor', RandomForestRegressor(random_state=0))])),
  ('LGBM',
   Pipeline(steps=[('columntransformer',
                    ColumnTransformer(transformers=[('cat_linear_processor',
                                                     OneHotEncoder(),
                                                     ['Vessel Type']),
                                                    ('date_linear_processor',
                                                     Pipeline(steps=[('ProcessDates',
                                                                      ProcessDates()),
                                                                     ('ProcessHolidays',
                                                                      ProcessHolidays()),
                                                                     ('DropDate',
                                                                      DropDate(date_cols=['Date']))]),
                                                     ['Date']),
                                                    ('vessel_linear_processor',
                                                     ProcessVessel(),
                                                     ['Total Vessels (Nu...
                                                      'Handysize Unladen (DWT)']),
                                                    ('weather_linear_processor',
                                                     ProcessWeather(),
                                                     ['tempt', 'prcp', 'wspd'])])),
                   ('regressor',
                    LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                                  bagging_seed=9, feature_fraction=0.2319,
                                  feature_fraction_seed=9, learning_rate=0.05,
                                  max_bin=55, min_data_in_leaf=6,
                                  min_sum_hessian_in_leaf=11, n_estimators=720,
                                  num_leaves=5, objective='regression'))]))],
 'final_estimator__boosting_type': 'gbdt',
 'final_estimator__class_weight': None,
 'final_estimator__colsample_bytree': 1.0,
 'final_estimator__importance_type': 'split',
 'final_estimator__learning_rate': 0.1,
 'final_estimator__max_depth': -1,
 'final_estimator__min_child_samples': 20,
 'final_estimator__min_child_weight': 0.001,
 'final_estimator__min_split_gain': 0.0,
 'final_estimator__n_estimators': 100,
 'final_estimator__n_jobs': -1,
 'final_estimator__num_leaves': 31,
 'final_estimator__objective': 'regression',
 'final_estimator__random_state': 0,
 'final_estimator__reg_alpha': 0.0,
 'final_estimator__reg_lambda': 0.0,
 'final_estimator__silent': 'warn',
 'final_estimator__subsample': 1.0,
 'final_estimator__subsample_for_bin': 200000,
 'final_estimator__subsample_freq': 0,
 'final_estimator__device': 'gpu',
 'final_estimator': LGBMRegressor(device='gpu', objective='regression', random_state=0),
 'n_jobs': -1,
 'passthrough': False,
 'verbose': 0,
 'LinearRegression': Pipeline(steps=[('columntransformer',
                  ColumnTransformer(transformers=[('cat_linear_processor',
                                                   OneHotEncoder(),
                                                   ['Vessel Type']),
                                                  ('date_linear_processor',
                                                   Pipeline(steps=[('ProcessDates',
                                                                    ProcessDates()),
                                                                   ('ProcessHolidays',
                                                                    ProcessHolidays()),
                                                                   ('DropDate',
                                                                    DropDate(date_cols=['Date']))]),
                                                   ['Date']),
                                                  ('vessel_linear_processor',
                                                   ProcessVessel(),
                                                   ['Total Vessels (Nu...
                                                    'Capesize (DWT)',
                                                    'Capesize Laden (DWT)',
                                                    'Capesize Unladen (DWT)',
                                                    'Panamax (DWT)',
                                                    'Panamax Laden (DWT)',
                                                    'Panamax Unladen (DWT)',
                                                    'Handymax (DWT)',
                                                    'Handymax Laden (DWT)',
                                                    'Handymax Unladen (DWT)',
                                                    'Handysize (DWT)',
                                                    'Handysize Laden (DWT)',
                                                    'Handysize Unladen (DWT)']),
                                                  ('weather_linear_processor',
                                                   ProcessWeather(),
                                                   ['tempt', 'prcp', 'wspd'])])),
                 ('regressor', ElasticNet(random_state=3))]),
 'GradientBoost': Pipeline(steps=[('columntransformer',
                  ColumnTransformer(transformers=[('cat_linear_processor',
                                                   OneHotEncoder(),
                                                   ['Vessel Type']),
                                                  ('date_linear_processor',
                                                   Pipeline(steps=[('ProcessDates',
                                                                    ProcessDates()),
                                                                   ('ProcessHolidays',
                                                                    ProcessHolidays()),
                                                                   ('DropDate',
                                                                    DropDate(date_cols=['Date']))]),
                                                   ['Date']),
                                                  ('vessel_linear_processor',
                                                   ProcessVessel(),
                                                   ['Total Vessels (Nu...
                                                    'Handymax Laden (DWT)',
                                                    'Handymax Unladen (DWT)',
                                                    'Handysize (DWT)',
                                                    'Handysize Laden (DWT)',
                                                    'Handysize Unladen (DWT)']),
                                                  ('weather_linear_processor',
                                                   ProcessWeather(),
                                                   ['tempt', 'prcp', 'wspd'])])),
                 ('regressor',
                  GradientBoostingRegressor(learning_rate=0.05, loss='huber',
                                            max_depth=4, max_features='sqrt',
                                            min_samples_leaf=15,
                                            min_samples_split=10,
                                            n_estimators=3000,
                                            random_state=5))]),
 'XGBoost': Pipeline(steps=[('columntransformer',
                  ColumnTransformer(transformers=[('cat_linear_processor',
                                                   OneHotEncoder(),
                                                   ['Vessel Type']),
                                                  ('date_linear_processor',
                                                   Pipeline(steps=[('ProcessDates',
                                                                    ProcessDates()),
                                                                   ('ProcessHolidays',
                                                                    ProcessHolidays()),
                                                                   ('DropDate',
                                                                    DropDate(date_cols=['Date']))]),
                                                   ['Date']),
                                                  ('vessel_linear_processor',
                                                   ProcessVessel(),
                                                   ['Total Vessels (Nu...
                               interaction_constraints=None, learning_rate=None,
                               max_delta_step=None, max_depth=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None, predictor=None,
                               random_state=0, reg_alpha=None, reg_lambda=None,
                               scale_pos_weight=None, subsample=None,
                               tree_method='gpu_hist', use_label_encoder=False,
                               validate_parameters=None, verbosity=None))]),
 'RandomForest': Pipeline(steps=[('columntransformer',
                  ColumnTransformer(transformers=[('cat_linear_processor',
                                                   OneHotEncoder(),
                                                   ['Vessel Type']),
                                                  ('date_linear_processor',
                                                   Pipeline(steps=[('ProcessDates',
                                                                    ProcessDates()),
                                                                   ('ProcessHolidays',
                                                                    ProcessHolidays()),
                                                                   ('DropDate',
                                                                    DropDate(date_cols=['Date']))]),
                                                   ['Date']),
                                                  ('vessel_linear_processor',
                                                   ProcessVessel(),
                                                   ['Total Vessels (Nu...
                                                    'Capesize Laden (DWT)',
                                                    'Capesize Unladen (DWT)',
                                                    'Panamax (DWT)',
                                                    'Panamax Laden (DWT)',
                                                    'Panamax Unladen (DWT)',
                                                    'Handymax (DWT)',
                                                    'Handymax Laden (DWT)',
                                                    'Handymax Unladen (DWT)',
                                                    'Handysize (DWT)',
                                                    'Handysize Laden (DWT)',
                                                    'Handysize Unladen (DWT)']),
                                                  ('weather_linear_processor',
                                                   ProcessWeather(),
                                                   ['tempt', 'prcp', 'wspd'])])),
                 ('regressor', RandomForestRegressor(random_state=0))]),
 'LGBM': Pipeline(steps=[('columntransformer',
                  ColumnTransformer(transformers=[('cat_linear_processor',
                                                   OneHotEncoder(),
                                                   ['Vessel Type']),
                                                  ('date_linear_processor',
                                                   Pipeline(steps=[('ProcessDates',
                                                                    ProcessDates()),
                                                                   ('ProcessHolidays',
                                                                    ProcessHolidays()),
                                                                   ('DropDate',
                                                                    DropDate(date_cols=['Date']))]),
                                                   ['Date']),
                                                  ('vessel_linear_processor',
                                                   ProcessVessel(),
                                                   ['Total Vessels (Nu...
                                                    'Handysize Unladen (DWT)']),
                                                  ('weather_linear_processor',
                                                   ProcessWeather(),
                                                   ['tempt', 'prcp', 'wspd'])])),
                 ('regressor',
                  LGBMRegressor(bagging_fraction=0.8, bagging_freq=5,
                                bagging_seed=9, feature_fraction=0.2319,
                                feature_fraction_seed=9, learning_rate=0.05,
                                max_bin=55, min_data_in_leaf=6,
                                min_sum_hessian_in_leaf=11, n_estimators=720,
                                num_leaves=5, objective='regression'))]),
 'LinearRegression__memory': None,
 'LinearRegression__steps': [('columntransformer',
   ColumnTransformer(transformers=[('cat_linear_processor', OneHotEncoder(),
                                    ['Vessel Type']),
                                   ('date_linear_processor',
                                    Pipeline(steps=[('ProcessDates',
                                                     ProcessDates()),
                                                    ('ProcessHolidays',
                                                     ProcessHolidays()),
                                                    ('DropDate',
                                                     DropDate(date_cols=['Date']))]),
                                    ['Date']),
                                   ('vessel_linear_processor', ProcessVessel(),
                                    ['Total Vessels (Number)', 'Capesize',
                                     'Capesize Laden', 'Ca...
                                   ('dwt_linear_processor', ProcessDWT(),
                                    ['Total Vessels (DWT)', 'Capesize (DWT)',
                                     'Capesize Laden (DWT)',
                                     'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                     'Panamax Laden (DWT)',
                                     'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                     'Handymax Laden (DWT)',
                                     'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                     'Handysize Laden (DWT)',
                                     'Handysize Unladen (DWT)']),
                                   ('weather_linear_processor', ProcessWeather(),
                                    ['tempt', 'prcp', 'wspd'])])),
  ('regressor', ElasticNet(random_state=3))],
 'LinearRegression__verbose': False,
 'LinearRegression__columntransformer': ColumnTransformer(transformers=[('cat_linear_processor', OneHotEncoder(),
                                  ['Vessel Type']),
                                 ('date_linear_processor',
                                  Pipeline(steps=[('ProcessDates',
                                                   ProcessDates()),
                                                  ('ProcessHolidays',
                                                   ProcessHolidays()),
                                                  ('DropDate',
                                                   DropDate(date_cols=['Date']))]),
                                  ['Date']),
                                 ('vessel_linear_processor', ProcessVessel(),
                                  ['Total Vessels (Number)', 'Capesize',
                                   'Capesize Laden', 'Ca...
                                 ('dwt_linear_processor', ProcessDWT(),
                                  ['Total Vessels (DWT)', 'Capesize (DWT)',
                                   'Capesize Laden (DWT)',
                                   'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                   'Panamax Laden (DWT)',
                                   'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                   'Handymax Laden (DWT)',
                                   'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                   'Handysize Laden (DWT)',
                                   'Handysize Unladen (DWT)']),
                                 ('weather_linear_processor', ProcessWeather(),
                                  ['tempt', 'prcp', 'wspd'])]),
 'LinearRegression__regressor': ElasticNet(random_state=3),
 'LinearRegression__columntransformer__n_jobs': None,
 'LinearRegression__columntransformer__remainder': 'drop',
 'LinearRegression__columntransformer__sparse_threshold': 0.3,
 'LinearRegression__columntransformer__transformer_weights': None,
 'LinearRegression__columntransformer__transformers': [('cat_linear_processor',
   OneHotEncoder(),
   ['Vessel Type']),
  ('date_linear_processor',
   Pipeline(steps=[('ProcessDates', ProcessDates()),
                   ('ProcessHolidays', ProcessHolidays()),
                   ('DropDate', DropDate(date_cols=['Date']))]),
   ['Date']),
  ('vessel_linear_processor',
   ProcessVessel(),
   ['Total Vessels (Number)',
    'Capesize',
    'Capesize Laden',
    'Capesize Unladen',
    'Panamax',
    'Panamax Laden',
    'Panamax Unladen',
    'Handymax',
    'Handymax Laden',
    'Handymax Unladen',
    'Handysize',
    'Handysize Laden',
    'Handysize Unladen']),
  ('dwt_linear_processor',
   ProcessDWT(),
   ['Total Vessels (DWT)',
    'Capesize (DWT)',
    'Capesize Laden (DWT)',
    'Capesize Unladen (DWT)',
    'Panamax (DWT)',
    'Panamax Laden (DWT)',
    'Panamax Unladen (DWT)',
    'Handymax (DWT)',
    'Handymax Laden (DWT)',
    'Handymax Unladen (DWT)',
    'Handysize (DWT)',
    'Handysize Laden (DWT)',
    'Handysize Unladen (DWT)']),
  ('weather_linear_processor', ProcessWeather(), ['tempt', 'prcp', 'wspd'])],
 'LinearRegression__columntransformer__verbose': False,
 'LinearRegression__columntransformer__verbose_feature_names_out': True,
 'LinearRegression__columntransformer__cat_linear_processor': OneHotEncoder(),
 'LinearRegression__columntransformer__date_linear_processor': Pipeline(steps=[('ProcessDates', ProcessDates()),
                 ('ProcessHolidays', ProcessHolidays()),
                 ('DropDate', DropDate(date_cols=['Date']))]),
 'LinearRegression__columntransformer__vessel_linear_processor': ProcessVessel(),
 'LinearRegression__columntransformer__dwt_linear_processor': ProcessDWT(),
 'LinearRegression__columntransformer__weather_linear_processor': ProcessWeather(),
 'LinearRegression__columntransformer__cat_linear_processor__categories': 'auto',
 'LinearRegression__columntransformer__cat_linear_processor__drop': None,
 'LinearRegression__columntransformer__cat_linear_processor__dtype': numpy.float64,
 'LinearRegression__columntransformer__cat_linear_processor__handle_unknown': 'error',
 'LinearRegression__columntransformer__cat_linear_processor__sparse': True,
 'LinearRegression__columntransformer__date_linear_processor__memory': None,
 'LinearRegression__columntransformer__date_linear_processor__steps': [('ProcessDates',
   ProcessDates()),
  ('ProcessHolidays', ProcessHolidays()),
  ('DropDate', DropDate(date_cols=['Date']))],
 'LinearRegression__columntransformer__date_linear_processor__verbose': False,
 'LinearRegression__columntransformer__date_linear_processor__ProcessDates': ProcessDates(),
 'LinearRegression__columntransformer__date_linear_processor__ProcessHolidays': ProcessHolidays(),
 'LinearRegression__columntransformer__date_linear_processor__DropDate': DropDate(date_cols=['Date']),
 'LinearRegression__columntransformer__date_linear_processor__DropDate__date_cols': ['Date'],
 'LinearRegression__regressor__alpha': 1.0,
 'LinearRegression__regressor__copy_X': True,
 'LinearRegression__regressor__fit_intercept': True,
 'LinearRegression__regressor__l1_ratio': 0.5,
 'LinearRegression__regressor__max_iter': 1000,
 'LinearRegression__regressor__normalize': 'deprecated',
 'LinearRegression__regressor__positive': False,
 'LinearRegression__regressor__precompute': False,
 'LinearRegression__regressor__random_state': 3,
 'LinearRegression__regressor__selection': 'cyclic',
 'LinearRegression__regressor__tol': 0.0001,
 'LinearRegression__regressor__warm_start': False,
 'GradientBoost__memory': None,
 'GradientBoost__steps': [('columntransformer',
   ColumnTransformer(transformers=[('cat_linear_processor', OneHotEncoder(),
                                    ['Vessel Type']),
                                   ('date_linear_processor',
                                    Pipeline(steps=[('ProcessDates',
                                                     ProcessDates()),
                                                    ('ProcessHolidays',
                                                     ProcessHolidays()),
                                                    ('DropDate',
                                                     DropDate(date_cols=['Date']))]),
                                    ['Date']),
                                   ('vessel_linear_processor', ProcessVessel(),
                                    ['Total Vessels (Number)', 'Capesize',
                                     'Capesize Laden', 'Ca...
                                   ('dwt_linear_processor', ProcessDWT(),
                                    ['Total Vessels (DWT)', 'Capesize (DWT)',
                                     'Capesize Laden (DWT)',
                                     'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                     'Panamax Laden (DWT)',
                                     'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                     'Handymax Laden (DWT)',
                                     'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                     'Handysize Laden (DWT)',
                                     'Handysize Unladen (DWT)']),
                                   ('weather_linear_processor', ProcessWeather(),
                                    ['tempt', 'prcp', 'wspd'])])),
  ('regressor',
   GradientBoostingRegressor(learning_rate=0.05, loss='huber', max_depth=4,
                             max_features='sqrt', min_samples_leaf=15,
                             min_samples_split=10, n_estimators=3000,
                             random_state=5))],
 'GradientBoost__verbose': False,
 'GradientBoost__columntransformer': ColumnTransformer(transformers=[('cat_linear_processor', OneHotEncoder(),
                                  ['Vessel Type']),
                                 ('date_linear_processor',
                                  Pipeline(steps=[('ProcessDates',
                                                   ProcessDates()),
                                                  ('ProcessHolidays',
                                                   ProcessHolidays()),
                                                  ('DropDate',
                                                   DropDate(date_cols=['Date']))]),
                                  ['Date']),
                                 ('vessel_linear_processor', ProcessVessel(),
                                  ['Total Vessels (Number)', 'Capesize',
                                   'Capesize Laden', 'Ca...
                                 ('dwt_linear_processor', ProcessDWT(),
                                  ['Total Vessels (DWT)', 'Capesize (DWT)',
                                   'Capesize Laden (DWT)',
                                   'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                   'Panamax Laden (DWT)',
                                   'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                   'Handymax Laden (DWT)',
                                   'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                   'Handysize Laden (DWT)',
                                   'Handysize Unladen (DWT)']),
                                 ('weather_linear_processor', ProcessWeather(),
                                  ['tempt', 'prcp', 'wspd'])]),
 'GradientBoost__regressor': GradientBoostingRegressor(learning_rate=0.05, loss='huber', max_depth=4,
                           max_features='sqrt', min_samples_leaf=15,
                           min_samples_split=10, n_estimators=3000,
                           random_state=5),
 'GradientBoost__columntransformer__n_jobs': None,
 'GradientBoost__columntransformer__remainder': 'drop',
 'GradientBoost__columntransformer__sparse_threshold': 0.3,
 'GradientBoost__columntransformer__transformer_weights': None,
 'GradientBoost__columntransformer__transformers': [('cat_linear_processor',
   OneHotEncoder(),
   ['Vessel Type']),
  ('date_linear_processor',
   Pipeline(steps=[('ProcessDates', ProcessDates()),
                   ('ProcessHolidays', ProcessHolidays()),
                   ('DropDate', DropDate(date_cols=['Date']))]),
   ['Date']),
  ('vessel_linear_processor',
   ProcessVessel(),
   ['Total Vessels (Number)',
    'Capesize',
    'Capesize Laden',
    'Capesize Unladen',
    'Panamax',
    'Panamax Laden',
    'Panamax Unladen',
    'Handymax',
    'Handymax Laden',
    'Handymax Unladen',
    'Handysize',
    'Handysize Laden',
    'Handysize Unladen']),
  ('dwt_linear_processor',
   ProcessDWT(),
   ['Total Vessels (DWT)',
    'Capesize (DWT)',
    'Capesize Laden (DWT)',
    'Capesize Unladen (DWT)',
    'Panamax (DWT)',
    'Panamax Laden (DWT)',
    'Panamax Unladen (DWT)',
    'Handymax (DWT)',
    'Handymax Laden (DWT)',
    'Handymax Unladen (DWT)',
    'Handysize (DWT)',
    'Handysize Laden (DWT)',
    'Handysize Unladen (DWT)']),
  ('weather_linear_processor', ProcessWeather(), ['tempt', 'prcp', 'wspd'])],
 'GradientBoost__columntransformer__verbose': False,
 'GradientBoost__columntransformer__verbose_feature_names_out': True,
 'GradientBoost__columntransformer__cat_linear_processor': OneHotEncoder(),
 'GradientBoost__columntransformer__date_linear_processor': Pipeline(steps=[('ProcessDates', ProcessDates()),
                 ('ProcessHolidays', ProcessHolidays()),
                 ('DropDate', DropDate(date_cols=['Date']))]),
 'GradientBoost__columntransformer__vessel_linear_processor': ProcessVessel(),
 'GradientBoost__columntransformer__dwt_linear_processor': ProcessDWT(),
 'GradientBoost__columntransformer__weather_linear_processor': ProcessWeather(),
 'GradientBoost__columntransformer__cat_linear_processor__categories': 'auto',
 'GradientBoost__columntransformer__cat_linear_processor__drop': None,
 'GradientBoost__columntransformer__cat_linear_processor__dtype': numpy.float64,
 'GradientBoost__columntransformer__cat_linear_processor__handle_unknown': 'error',
 'GradientBoost__columntransformer__cat_linear_processor__sparse': True,
 'GradientBoost__columntransformer__date_linear_processor__memory': None,
 'GradientBoost__columntransformer__date_linear_processor__steps': [('ProcessDates',
   ProcessDates()),
  ('ProcessHolidays', ProcessHolidays()),
  ('DropDate', DropDate(date_cols=['Date']))],
 'GradientBoost__columntransformer__date_linear_processor__verbose': False,
 'GradientBoost__columntransformer__date_linear_processor__ProcessDates': ProcessDates(),
 'GradientBoost__columntransformer__date_linear_processor__ProcessHolidays': ProcessHolidays(),
 'GradientBoost__columntransformer__date_linear_processor__DropDate': DropDate(date_cols=['Date']),
 'GradientBoost__columntransformer__date_linear_processor__DropDate__date_cols': ['Date'],
 'GradientBoost__regressor__alpha': 0.9,
 'GradientBoost__regressor__ccp_alpha': 0.0,
 'GradientBoost__regressor__criterion': 'friedman_mse',
 'GradientBoost__regressor__init': None,
 'GradientBoost__regressor__learning_rate': 0.05,
 'GradientBoost__regressor__loss': 'huber',
 'GradientBoost__regressor__max_depth': 4,
 'GradientBoost__regressor__max_features': 'sqrt',
 'GradientBoost__regressor__max_leaf_nodes': None,
 'GradientBoost__regressor__min_impurity_decrease': 0.0,
 'GradientBoost__regressor__min_samples_leaf': 15,
 'GradientBoost__regressor__min_samples_split': 10,
 'GradientBoost__regressor__min_weight_fraction_leaf': 0.0,
 'GradientBoost__regressor__n_estimators': 3000,
 'GradientBoost__regressor__n_iter_no_change': None,
 'GradientBoost__regressor__random_state': 5,
 'GradientBoost__regressor__subsample': 1.0,
 'GradientBoost__regressor__tol': 0.0001,
 'GradientBoost__regressor__validation_fraction': 0.1,
 'GradientBoost__regressor__verbose': 0,
 'GradientBoost__regressor__warm_start': False,
 'XGBoost__memory': None,
 'XGBoost__steps': [('columntransformer',
   ColumnTransformer(transformers=[('cat_linear_processor', OneHotEncoder(),
                                    ['Vessel Type']),
                                   ('date_linear_processor',
                                    Pipeline(steps=[('ProcessDates',
                                                     ProcessDates()),
                                                    ('ProcessHolidays',
                                                     ProcessHolidays()),
                                                    ('DropDate',
                                                     DropDate(date_cols=['Date']))]),
                                    ['Date']),
                                   ('vessel_linear_processor', ProcessVessel(),
                                    ['Total Vessels (Number)', 'Capesize',
                                     'Capesize Laden', 'Ca...
                                   ('dwt_linear_processor', ProcessDWT(),
                                    ['Total Vessels (DWT)', 'Capesize (DWT)',
                                     'Capesize Laden (DWT)',
                                     'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                     'Panamax Laden (DWT)',
                                     'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                     'Handymax Laden (DWT)',
                                     'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                     'Handysize Laden (DWT)',
                                     'Handysize Unladen (DWT)']),
                                   ('weather_linear_processor', ProcessWeather(),
                                    ['tempt', 'prcp', 'wspd'])])),
  ('regressor',
   XGBRegressor(base_score=None, booster=None, colsample_bylevel=None,
                colsample_bynode=None, colsample_bytree=None,
                enable_categorical=False, eval_metric='rmse', gamma=None,
                gpu_id=None, importance_type=None, interaction_constraints=None,
                learning_rate=None, max_delta_step=None, max_depth=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                n_estimators=100, n_jobs=-1, num_parallel_tree=None,
                predictor=None, random_state=0, reg_alpha=None, reg_lambda=None,
                scale_pos_weight=None, subsample=None, tree_method='gpu_hist',
                use_label_encoder=False, validate_parameters=None, verbosity=None))],
 'XGBoost__verbose': False,
 'XGBoost__columntransformer': ColumnTransformer(transformers=[('cat_linear_processor', OneHotEncoder(),
                                  ['Vessel Type']),
                                 ('date_linear_processor',
                                  Pipeline(steps=[('ProcessDates',
                                                   ProcessDates()),
                                                  ('ProcessHolidays',
                                                   ProcessHolidays()),
                                                  ('DropDate',
                                                   DropDate(date_cols=['Date']))]),
                                  ['Date']),
                                 ('vessel_linear_processor', ProcessVessel(),
                                  ['Total Vessels (Number)', 'Capesize',
                                   'Capesize Laden', 'Ca...
                                 ('dwt_linear_processor', ProcessDWT(),
                                  ['Total Vessels (DWT)', 'Capesize (DWT)',
                                   'Capesize Laden (DWT)',
                                   'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                   'Panamax Laden (DWT)',
                                   'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                   'Handymax Laden (DWT)',
                                   'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                   'Handysize Laden (DWT)',
                                   'Handysize Unladen (DWT)']),
                                 ('weather_linear_processor', ProcessWeather(),
                                  ['tempt', 'prcp', 'wspd'])]),
 'XGBoost__regressor': XGBRegressor(base_score=None, booster=None, colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None,
              enable_categorical=False, eval_metric='rmse', gamma=None,
              gpu_id=None, importance_type=None, interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=0, reg_alpha=None, reg_lambda=None,
              scale_pos_weight=None, subsample=None, tree_method='gpu_hist',
              use_label_encoder=False, validate_parameters=None, verbosity=None),
 'XGBoost__columntransformer__n_jobs': None,
 'XGBoost__columntransformer__remainder': 'drop',
 'XGBoost__columntransformer__sparse_threshold': 0.3,
 'XGBoost__columntransformer__transformer_weights': None,
 'XGBoost__columntransformer__transformers': [('cat_linear_processor',
   OneHotEncoder(),
   ['Vessel Type']),
  ('date_linear_processor',
   Pipeline(steps=[('ProcessDates', ProcessDates()),
                   ('ProcessHolidays', ProcessHolidays()),
                   ('DropDate', DropDate(date_cols=['Date']))]),
   ['Date']),
  ('vessel_linear_processor',
   ProcessVessel(),
   ['Total Vessels (Number)',
    'Capesize',
    'Capesize Laden',
    'Capesize Unladen',
    'Panamax',
    'Panamax Laden',
    'Panamax Unladen',
    'Handymax',
    'Handymax Laden',
    'Handymax Unladen',
    'Handysize',
    'Handysize Laden',
    'Handysize Unladen']),
  ('dwt_linear_processor',
   ProcessDWT(),
   ['Total Vessels (DWT)',
    'Capesize (DWT)',
    'Capesize Laden (DWT)',
    'Capesize Unladen (DWT)',
    'Panamax (DWT)',
    'Panamax Laden (DWT)',
    'Panamax Unladen (DWT)',
    'Handymax (DWT)',
    'Handymax Laden (DWT)',
    'Handymax Unladen (DWT)',
    'Handysize (DWT)',
    'Handysize Laden (DWT)',
    'Handysize Unladen (DWT)']),
  ('weather_linear_processor', ProcessWeather(), ['tempt', 'prcp', 'wspd'])],
 'XGBoost__columntransformer__verbose': False,
 'XGBoost__columntransformer__verbose_feature_names_out': True,
 'XGBoost__columntransformer__cat_linear_processor': OneHotEncoder(),
 'XGBoost__columntransformer__date_linear_processor': Pipeline(steps=[('ProcessDates', ProcessDates()),
                 ('ProcessHolidays', ProcessHolidays()),
                 ('DropDate', DropDate(date_cols=['Date']))]),
 'XGBoost__columntransformer__vessel_linear_processor': ProcessVessel(),
 'XGBoost__columntransformer__dwt_linear_processor': ProcessDWT(),
 'XGBoost__columntransformer__weather_linear_processor': ProcessWeather(),
 'XGBoost__columntransformer__cat_linear_processor__categories': 'auto',
 'XGBoost__columntransformer__cat_linear_processor__drop': None,
 'XGBoost__columntransformer__cat_linear_processor__dtype': numpy.float64,
 'XGBoost__columntransformer__cat_linear_processor__handle_unknown': 'error',
 'XGBoost__columntransformer__cat_linear_processor__sparse': True,
 'XGBoost__columntransformer__date_linear_processor__memory': None,
 'XGBoost__columntransformer__date_linear_processor__steps': [('ProcessDates',
   ProcessDates()),
  ('ProcessHolidays', ProcessHolidays()),
  ('DropDate', DropDate(date_cols=['Date']))],
 'XGBoost__columntransformer__date_linear_processor__verbose': False,
 'XGBoost__columntransformer__date_linear_processor__ProcessDates': ProcessDates(),
 'XGBoost__columntransformer__date_linear_processor__ProcessHolidays': ProcessHolidays(),
 'XGBoost__columntransformer__date_linear_processor__DropDate': DropDate(date_cols=['Date']),
 'XGBoost__columntransformer__date_linear_processor__DropDate__date_cols': ['Date'],
 'XGBoost__regressor__objective': 'reg:squarederror',
 'XGBoost__regressor__base_score': None,
 'XGBoost__regressor__booster': None,
 'XGBoost__regressor__colsample_bylevel': None,
 'XGBoost__regressor__colsample_bynode': None,
 'XGBoost__regressor__colsample_bytree': None,
 'XGBoost__regressor__enable_categorical': False,
 'XGBoost__regressor__gamma': None,
 'XGBoost__regressor__gpu_id': None,
 'XGBoost__regressor__importance_type': None,
 'XGBoost__regressor__interaction_constraints': None,
 'XGBoost__regressor__learning_rate': None,
 'XGBoost__regressor__max_delta_step': None,
 'XGBoost__regressor__max_depth': None,
 'XGBoost__regressor__min_child_weight': None,
 'XGBoost__regressor__missing': nan,
 'XGBoost__regressor__monotone_constraints': None,
 'XGBoost__regressor__n_estimators': 100,
 'XGBoost__regressor__n_jobs': -1,
 'XGBoost__regressor__num_parallel_tree': None,
 'XGBoost__regressor__predictor': None,
 'XGBoost__regressor__random_state': 0,
 'XGBoost__regressor__reg_alpha': None,
 'XGBoost__regressor__reg_lambda': None,
 'XGBoost__regressor__scale_pos_weight': None,
 'XGBoost__regressor__subsample': None,
 'XGBoost__regressor__tree_method': 'gpu_hist',
 'XGBoost__regressor__validate_parameters': None,
 'XGBoost__regressor__verbosity': None,
 'XGBoost__regressor__eval_metric': 'rmse',
 'XGBoost__regressor__use_label_encoder': False,
 'RandomForest__memory': None,
 'RandomForest__steps': [('columntransformer',
   ColumnTransformer(transformers=[('cat_linear_processor', OneHotEncoder(),
                                    ['Vessel Type']),
                                   ('date_linear_processor',
                                    Pipeline(steps=[('ProcessDates',
                                                     ProcessDates()),
                                                    ('ProcessHolidays',
                                                     ProcessHolidays()),
                                                    ('DropDate',
                                                     DropDate(date_cols=['Date']))]),
                                    ['Date']),
                                   ('vessel_linear_processor', ProcessVessel(),
                                    ['Total Vessels (Number)', 'Capesize',
                                     'Capesize Laden', 'Ca...
                                   ('dwt_linear_processor', ProcessDWT(),
                                    ['Total Vessels (DWT)', 'Capesize (DWT)',
                                     'Capesize Laden (DWT)',
                                     'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                     'Panamax Laden (DWT)',
                                     'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                     'Handymax Laden (DWT)',
                                     'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                     'Handysize Laden (DWT)',
                                     'Handysize Unladen (DWT)']),
                                   ('weather_linear_processor', ProcessWeather(),
                                    ['tempt', 'prcp', 'wspd'])])),
  ('regressor', RandomForestRegressor(random_state=0))],
 'RandomForest__verbose': False,
 'RandomForest__columntransformer': ColumnTransformer(transformers=[('cat_linear_processor', OneHotEncoder(),
                                  ['Vessel Type']),
                                 ('date_linear_processor',
                                  Pipeline(steps=[('ProcessDates',
                                                   ProcessDates()),
                                                  ('ProcessHolidays',
                                                   ProcessHolidays()),
                                                  ('DropDate',
                                                   DropDate(date_cols=['Date']))]),
                                  ['Date']),
                                 ('vessel_linear_processor', ProcessVessel(),
                                  ['Total Vessels (Number)', 'Capesize',
                                   'Capesize Laden', 'Ca...
                                 ('dwt_linear_processor', ProcessDWT(),
                                  ['Total Vessels (DWT)', 'Capesize (DWT)',
                                   'Capesize Laden (DWT)',
                                   'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                   'Panamax Laden (DWT)',
                                   'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                   'Handymax Laden (DWT)',
                                   'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                   'Handysize Laden (DWT)',
                                   'Handysize Unladen (DWT)']),
                                 ('weather_linear_processor', ProcessWeather(),
                                  ['tempt', 'prcp', 'wspd'])]),
 'RandomForest__regressor': RandomForestRegressor(random_state=0),
 'RandomForest__columntransformer__n_jobs': None,
 'RandomForest__columntransformer__remainder': 'drop',
 'RandomForest__columntransformer__sparse_threshold': 0.3,
 'RandomForest__columntransformer__transformer_weights': None,
 'RandomForest__columntransformer__transformers': [('cat_linear_processor',
   OneHotEncoder(),
   ['Vessel Type']),
  ('date_linear_processor',
   Pipeline(steps=[('ProcessDates', ProcessDates()),
                   ('ProcessHolidays', ProcessHolidays()),
                   ('DropDate', DropDate(date_cols=['Date']))]),
   ['Date']),
  ('vessel_linear_processor',
   ProcessVessel(),
   ['Total Vessels (Number)',
    'Capesize',
    'Capesize Laden',
    'Capesize Unladen',
    'Panamax',
    'Panamax Laden',
    'Panamax Unladen',
    'Handymax',
    'Handymax Laden',
    'Handymax Unladen',
    'Handysize',
    'Handysize Laden',
    'Handysize Unladen']),
  ('dwt_linear_processor',
   ProcessDWT(),
   ['Total Vessels (DWT)',
    'Capesize (DWT)',
    'Capesize Laden (DWT)',
    'Capesize Unladen (DWT)',
    'Panamax (DWT)',
    'Panamax Laden (DWT)',
    'Panamax Unladen (DWT)',
    'Handymax (DWT)',
    'Handymax Laden (DWT)',
    'Handymax Unladen (DWT)',
    'Handysize (DWT)',
    'Handysize Laden (DWT)',
    'Handysize Unladen (DWT)']),
  ('weather_linear_processor', ProcessWeather(), ['tempt', 'prcp', 'wspd'])],
 'RandomForest__columntransformer__verbose': False,
 'RandomForest__columntransformer__verbose_feature_names_out': True,
 'RandomForest__columntransformer__cat_linear_processor': OneHotEncoder(),
 'RandomForest__columntransformer__date_linear_processor': Pipeline(steps=[('ProcessDates', ProcessDates()),
                 ('ProcessHolidays', ProcessHolidays()),
                 ('DropDate', DropDate(date_cols=['Date']))]),
 'RandomForest__columntransformer__vessel_linear_processor': ProcessVessel(),
 'RandomForest__columntransformer__dwt_linear_processor': ProcessDWT(),
 'RandomForest__columntransformer__weather_linear_processor': ProcessWeather(),
 'RandomForest__columntransformer__cat_linear_processor__categories': 'auto',
 'RandomForest__columntransformer__cat_linear_processor__drop': None,
 'RandomForest__columntransformer__cat_linear_processor__dtype': numpy.float64,
 'RandomForest__columntransformer__cat_linear_processor__handle_unknown': 'error',
 'RandomForest__columntransformer__cat_linear_processor__sparse': True,
 'RandomForest__columntransformer__date_linear_processor__memory': None,
 'RandomForest__columntransformer__date_linear_processor__steps': [('ProcessDates',
   ProcessDates()),
  ('ProcessHolidays', ProcessHolidays()),
  ('DropDate', DropDate(date_cols=['Date']))],
 'RandomForest__columntransformer__date_linear_processor__verbose': False,
 'RandomForest__columntransformer__date_linear_processor__ProcessDates': ProcessDates(),
 'RandomForest__columntransformer__date_linear_processor__ProcessHolidays': ProcessHolidays(),
 'RandomForest__columntransformer__date_linear_processor__DropDate': DropDate(date_cols=['Date']),
 'RandomForest__columntransformer__date_linear_processor__DropDate__date_cols': ['Date'],
 'RandomForest__regressor__bootstrap': True,
 'RandomForest__regressor__ccp_alpha': 0.0,
 'RandomForest__regressor__criterion': 'squared_error',
 'RandomForest__regressor__max_depth': None,
 'RandomForest__regressor__max_features': 'auto',
 'RandomForest__regressor__max_leaf_nodes': None,
 'RandomForest__regressor__max_samples': None,
 'RandomForest__regressor__min_impurity_decrease': 0.0,
 'RandomForest__regressor__min_samples_leaf': 1,
 'RandomForest__regressor__min_samples_split': 2,
 'RandomForest__regressor__min_weight_fraction_leaf': 0.0,
 'RandomForest__regressor__n_estimators': 100,
 'RandomForest__regressor__n_jobs': None,
 'RandomForest__regressor__oob_score': False,
 'RandomForest__regressor__random_state': 0,
 'RandomForest__regressor__verbose': 0,
 'RandomForest__regressor__warm_start': False,
 'LGBM__memory': None,
 'LGBM__steps': [('columntransformer',
   ColumnTransformer(transformers=[('cat_linear_processor', OneHotEncoder(),
                                    ['Vessel Type']),
                                   ('date_linear_processor',
                                    Pipeline(steps=[('ProcessDates',
                                                     ProcessDates()),
                                                    ('ProcessHolidays',
                                                     ProcessHolidays()),
                                                    ('DropDate',
                                                     DropDate(date_cols=['Date']))]),
                                    ['Date']),
                                   ('vessel_linear_processor', ProcessVessel(),
                                    ['Total Vessels (Number)', 'Capesize',
                                     'Capesize Laden', 'Ca...
                                   ('dwt_linear_processor', ProcessDWT(),
                                    ['Total Vessels (DWT)', 'Capesize (DWT)',
                                     'Capesize Laden (DWT)',
                                     'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                     'Panamax Laden (DWT)',
                                     'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                     'Handymax Laden (DWT)',
                                     'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                     'Handysize Laden (DWT)',
                                     'Handysize Unladen (DWT)']),
                                   ('weather_linear_processor', ProcessWeather(),
                                    ['tempt', 'prcp', 'wspd'])])),
  ('regressor',
   LGBMRegressor(bagging_fraction=0.8, bagging_freq=5, bagging_seed=9,
                 feature_fraction=0.2319, feature_fraction_seed=9,
                 learning_rate=0.05, max_bin=55, min_data_in_leaf=6,
                 min_sum_hessian_in_leaf=11, n_estimators=720, num_leaves=5,
                 objective='regression'))],
 'LGBM__verbose': False,
 'LGBM__columntransformer': ColumnTransformer(transformers=[('cat_linear_processor', OneHotEncoder(),
                                  ['Vessel Type']),
                                 ('date_linear_processor',
                                  Pipeline(steps=[('ProcessDates',
                                                   ProcessDates()),
                                                  ('ProcessHolidays',
                                                   ProcessHolidays()),
                                                  ('DropDate',
                                                   DropDate(date_cols=['Date']))]),
                                  ['Date']),
                                 ('vessel_linear_processor', ProcessVessel(),
                                  ['Total Vessels (Number)', 'Capesize',
                                   'Capesize Laden', 'Ca...
                                 ('dwt_linear_processor', ProcessDWT(),
                                  ['Total Vessels (DWT)', 'Capesize (DWT)',
                                   'Capesize Laden (DWT)',
                                   'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                   'Panamax Laden (DWT)',
                                   'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                   'Handymax Laden (DWT)',
                                   'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                   'Handysize Laden (DWT)',
                                   'Handysize Unladen (DWT)']),
                                 ('weather_linear_processor', ProcessWeather(),
                                  ['tempt', 'prcp', 'wspd'])]),
 'LGBM__regressor': LGBMRegressor(bagging_fraction=0.8, bagging_freq=5, bagging_seed=9,
               feature_fraction=0.2319, feature_fraction_seed=9,
               learning_rate=0.05, max_bin=55, min_data_in_leaf=6,
               min_sum_hessian_in_leaf=11, n_estimators=720, num_leaves=5,
               objective='regression'),
 'LGBM__columntransformer__n_jobs': None,
 'LGBM__columntransformer__remainder': 'drop',
 'LGBM__columntransformer__sparse_threshold': 0.3,
 'LGBM__columntransformer__transformer_weights': None,
 'LGBM__columntransformer__transformers': [('cat_linear_processor',
   OneHotEncoder(),
   ['Vessel Type']),
  ('date_linear_processor',
   Pipeline(steps=[('ProcessDates', ProcessDates()),
                   ('ProcessHolidays', ProcessHolidays()),
                   ('DropDate', DropDate(date_cols=['Date']))]),
   ['Date']),
  ('vessel_linear_processor',
   ProcessVessel(),
   ['Total Vessels (Number)',
    'Capesize',
    'Capesize Laden',
    'Capesize Unladen',
    'Panamax',
    'Panamax Laden',
    'Panamax Unladen',
    'Handymax',
    'Handymax Laden',
    'Handymax Unladen',
    'Handysize',
    'Handysize Laden',
    'Handysize Unladen']),
  ('dwt_linear_processor',
   ProcessDWT(),
   ['Total Vessels (DWT)',
    'Capesize (DWT)',
    'Capesize Laden (DWT)',
    'Capesize Unladen (DWT)',
    'Panamax (DWT)',
    'Panamax Laden (DWT)',
    'Panamax Unladen (DWT)',
    'Handymax (DWT)',
    'Handymax Laden (DWT)',
    'Handymax Unladen (DWT)',
    'Handysize (DWT)',
    'Handysize Laden (DWT)',
    'Handysize Unladen (DWT)']),
  ('weather_linear_processor', ProcessWeather(), ['tempt', 'prcp', 'wspd'])],
 'LGBM__columntransformer__verbose': False,
 'LGBM__columntransformer__verbose_feature_names_out': True,
 'LGBM__columntransformer__cat_linear_processor': OneHotEncoder(),
 'LGBM__columntransformer__date_linear_processor': Pipeline(steps=[('ProcessDates', ProcessDates()),
                 ('ProcessHolidays', ProcessHolidays()),
                 ('DropDate', DropDate(date_cols=['Date']))]),
 'LGBM__columntransformer__vessel_linear_processor': ProcessVessel(),
 'LGBM__columntransformer__dwt_linear_processor': ProcessDWT(),
 'LGBM__columntransformer__weather_linear_processor': ProcessWeather(),
 'LGBM__columntransformer__cat_linear_processor__categories': 'auto',
 'LGBM__columntransformer__cat_linear_processor__drop': None,
 'LGBM__columntransformer__cat_linear_processor__dtype': numpy.float64,
 'LGBM__columntransformer__cat_linear_processor__handle_unknown': 'error',
 'LGBM__columntransformer__cat_linear_processor__sparse': True,
 'LGBM__columntransformer__date_linear_processor__memory': None,
 'LGBM__columntransformer__date_linear_processor__steps': [('ProcessDates',
   ProcessDates()),
  ('ProcessHolidays', ProcessHolidays()),
  ('DropDate', DropDate(date_cols=['Date']))],
 'LGBM__columntransformer__date_linear_processor__verbose': False,
 'LGBM__columntransformer__date_linear_processor__ProcessDates': ProcessDates(),
 'LGBM__columntransformer__date_linear_processor__ProcessHolidays': ProcessHolidays(),
 'LGBM__columntransformer__date_linear_processor__DropDate': DropDate(date_cols=['Date']),
 'LGBM__columntransformer__date_linear_processor__DropDate__date_cols': ['Date'],
 'LGBM__regressor__boosting_type': 'gbdt',
 'LGBM__regressor__class_weight': None,
 'LGBM__regressor__colsample_bytree': 1.0,
 'LGBM__regressor__importance_type': 'split',
 'LGBM__regressor__learning_rate': 0.05,
 'LGBM__regressor__max_depth': -1,
 'LGBM__regressor__min_child_samples': 20,
 'LGBM__regressor__min_child_weight': 0.001,
 'LGBM__regressor__min_split_gain': 0.0,
 'LGBM__regressor__n_estimators': 720,
 'LGBM__regressor__n_jobs': -1,
 'LGBM__regressor__num_leaves': 5,
 'LGBM__regressor__objective': 'regression',
 'LGBM__regressor__random_state': None,
 'LGBM__regressor__reg_alpha': 0.0,
 'LGBM__regressor__reg_lambda': 0.0,
 'LGBM__regressor__silent': 'warn',
 'LGBM__regressor__subsample': 1.0,
 'LGBM__regressor__subsample_for_bin': 200000,
 'LGBM__regressor__subsample_freq': 0,
 'LGBM__regressor__max_bin': 55,
 'LGBM__regressor__bagging_fraction': 0.8,
 'LGBM__regressor__bagging_freq': 5,
 'LGBM__regressor__feature_fraction': 0.2319,
 'LGBM__regressor__feature_fraction_seed': 9,
 'LGBM__regressor__bagging_seed': 9,
 'LGBM__regressor__min_data_in_leaf': 6,
 'LGBM__regressor__min_sum_hessian_in_leaf': 11}