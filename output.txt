{'memory': None,
 'steps': [('columntransformer',
   ColumnTransformer(transformers=[('numeric_linear_processor',
                                    Pipeline(steps=[('Polynomial',
                                                     PolynomialFeatures(interaction_only=True)),
                                                    ('Scaler', StandardScaler())]),
                                    ['Waiting Time (Days)']),
                                   ('cat_linear_processor', None, ['Vessel Type']),
                                   ('date_linear_processor', ProcessDates(),
                                    ['Berth or Port Entry', 'Date']),
                                   ('vessel_linear_processor', None,
                                    ['Total Vessels (Num...
                                   ('dwt_linear_processor', None,
                                    ['Total Vessels (DWT)', 'Capesize (DWT)',
                                     'Capesize Laden (DWT)',
                                     'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                     'Panamax Laden (DWT)',
                                     'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                     'Handymax Laden (DWT)',
                                     'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                     'Handysize Laden (DWT)',
                                     'Handysize Unladen (DWT)']),
                                   ('weather_linear_processor', None,
                                    ['tempt', 'prcp', 'wspd'])])),
  ('stackingclassifier',
   StackingClassifier(estimators=[('LightGBM',
                                   LGBMClassifier(device='gpu', metric='auc',
                                                  objective='multiclass',
                                                  random_state=0)),
                                  ('XGBoost',
                                   XGBClassifier(base_score=None, booster=None,
                                                 colsample_bylevel=None,
                                                 colsample_bynode=None,
                                                 colsample_bytree=None,
                                                 enable_categorical=False,
                                                 eval_metric='auc', gamma=None,
                                                 gpu_id=None, importance_type=None,
                                                 interaction_constr...
                                                 scale_pos_weight=None,
                                                 subsample=None,
                                                 tree_method='gpu_hist',
                                                 use_label_encoder=False,
                                                 validate_parameters=None, ...)),
                                  ('RandomForest',
                                   RandomForestClassifier(random_state=0)),
                                  ('DecisionTree',
                                   DecisionTreeClassifier(random_state=0))],
                      final_estimator=LGBMClassifier(device='gpu', metric='auc',
                                                     objective='multiclass',
                                                     random_state=0),
                      n_jobs=-1, stack_method='predict_proba'))],
 'verbose': False,
 'columntransformer': ColumnTransformer(transformers=[('numeric_linear_processor',
                                  Pipeline(steps=[('Polynomial',
                                                   PolynomialFeatures(interaction_only=True)),
                                                  ('Scaler', StandardScaler())]),
                                  ['Waiting Time (Days)']),
                                 ('cat_linear_processor', None, ['Vessel Type']),
                                 ('date_linear_processor', ProcessDates(),
                                  ['Berth or Port Entry', 'Date']),
                                 ('vessel_linear_processor', None,
                                  ['Total Vessels (Num...
                                 ('dwt_linear_processor', None,
                                  ['Total Vessels (DWT)', 'Capesize (DWT)',
                                   'Capesize Laden (DWT)',
                                   'Capesize Unladen (DWT)', 'Panamax (DWT)',
                                   'Panamax Laden (DWT)',
                                   'Panamax Unladen (DWT)', 'Handymax (DWT)',
                                   'Handymax Laden (DWT)',
                                   'Handymax Unladen (DWT)', 'Handysize (DWT)',
                                   'Handysize Laden (DWT)',
                                   'Handysize Unladen (DWT)']),
                                 ('weather_linear_processor', None,
                                  ['tempt', 'prcp', 'wspd'])]),
 'stackingclassifier': StackingClassifier(estimators=[('LightGBM',
                                 LGBMClassifier(device='gpu', metric='auc',
                                                objective='multiclass',
                                                random_state=0)),
                                ('XGBoost',
                                 XGBClassifier(base_score=None, booster=None,
                                               colsample_bylevel=None,
                                               colsample_bynode=None,
                                               colsample_bytree=None,
                                               enable_categorical=False,
                                               eval_metric='auc', gamma=None,
                                               gpu_id=None, importance_type=None,
                                               interaction_constr...
                                               scale_pos_weight=None,
                                               subsample=None,
                                               tree_method='gpu_hist',
                                               use_label_encoder=False,
                                               validate_parameters=None, ...)),
                                ('RandomForest',
                                 RandomForestClassifier(random_state=0)),
                                ('DecisionTree',
                                 DecisionTreeClassifier(random_state=0))],
                    final_estimator=LGBMClassifier(device='gpu', metric='auc',
                                                   objective='multiclass',
                                                   random_state=0),
                    n_jobs=-1, stack_method='predict_proba'),
 'columntransformer__n_jobs': None,
 'columntransformer__remainder': 'drop',
 'columntransformer__sparse_threshold': 0.3,
 'columntransformer__transformer_weights': None,
 'columntransformer__transformers': [('numeric_linear_processor',
   Pipeline(steps=[('Polynomial', PolynomialFeatures(interaction_only=True)),
                   ('Scaler', StandardScaler())]),
   ['Waiting Time (Days)']),
  ('cat_linear_processor', None, ['Vessel Type']),
  ('date_linear_processor', ProcessDates(), ['Berth or Port Entry', 'Date']),
  ('vessel_linear_processor',
   None,
   ['Total Vessels (Number)',
    'Capesize',
    'Capesize Laden',
    'Capesize Unladen',
    'Panamax',
    'Panamax Laden',
    'Panamax Unladen',
    'Handymax',
    'Handymax Laden',
    'Handymax Unladen',
    'Handysize',
    'Handysize Laden',
    'Handysize Unladen']),
  ('dwt_linear_processor',
   None,
   ['Total Vessels (DWT)',
    'Capesize (DWT)',
    'Capesize Laden (DWT)',
    'Capesize Unladen (DWT)',
    'Panamax (DWT)',
    'Panamax Laden (DWT)',
    'Panamax Unladen (DWT)',
    'Handymax (DWT)',
    'Handymax Laden (DWT)',
    'Handymax Unladen (DWT)',
    'Handysize (DWT)',
    'Handysize Laden (DWT)',
    'Handysize Unladen (DWT)']),
  ('weather_linear_processor', None, ['tempt', 'prcp', 'wspd'])],
 'columntransformer__verbose': False,
 'columntransformer__verbose_feature_names_out': True,
 'columntransformer__numeric_linear_processor': Pipeline(steps=[('Polynomial', PolynomialFeatures(interaction_only=True)),
                 ('Scaler', StandardScaler())]),
 'columntransformer__cat_linear_processor': None,
 'columntransformer__date_linear_processor': ProcessDates(),
 'columntransformer__vessel_linear_processor': None,
 'columntransformer__dwt_linear_processor': None,
 'columntransformer__weather_linear_processor': None,
 'columntransformer__numeric_linear_processor__memory': None,
 'columntransformer__numeric_linear_processor__steps': [('Polynomial',
   PolynomialFeatures(interaction_only=True)),
  ('Scaler', StandardScaler())],
 'columntransformer__numeric_linear_processor__verbose': False,
 'columntransformer__numeric_linear_processor__Polynomial': PolynomialFeatures(interaction_only=True),
 'columntransformer__numeric_linear_processor__Scaler': StandardScaler(),
 'columntransformer__numeric_linear_processor__Polynomial__degree': 2,
 'columntransformer__numeric_linear_processor__Polynomial__include_bias': True,
 'columntransformer__numeric_linear_processor__Polynomial__interaction_only': True,
 'columntransformer__numeric_linear_processor__Polynomial__order': 'C',
 'columntransformer__numeric_linear_processor__Scaler__copy': True,
 'columntransformer__numeric_linear_processor__Scaler__with_mean': True,
 'columntransformer__numeric_linear_processor__Scaler__with_std': True,
 'stackingclassifier__cv': None,
 'stackingclassifier__estimators': [('LightGBM',
   LGBMClassifier(device='gpu', metric='auc', objective='multiclass',
                  random_state=0)),
  ('XGBoost',
   XGBClassifier(base_score=None, booster=None, colsample_bylevel=None,
                 colsample_bynode=None, colsample_bytree=None,
                 enable_categorical=False, eval_metric='auc', gamma=None,
                 gpu_id=None, importance_type=None, interaction_constraints=None,
                 learning_rate=None, max_delta_step=None, max_depth=None,
                 min_child_weight=None, missing=nan, monotone_constraints=None,
                 n_estimators=100, n_jobs=-1, num_parallel_tree=None,
                 objective='multi:softmax', predictor=None, random_state=0,
                 reg_alpha=None, reg_lambda=None, scale_pos_weight=None,
                 subsample=None, tree_method='gpu_hist', use_label_encoder=False,
                 validate_parameters=None, ...)),
  ('RandomForest', RandomForestClassifier(random_state=0)),
  ('DecisionTree', DecisionTreeClassifier(random_state=0))],
 'stackingclassifier__final_estimator__boosting_type': 'gbdt',
 'stackingclassifier__final_estimator__class_weight': None,
 'stackingclassifier__final_estimator__colsample_bytree': 1.0,
 'stackingclassifier__final_estimator__importance_type': 'split',
 'stackingclassifier__final_estimator__learning_rate': 0.1,
 'stackingclassifier__final_estimator__max_depth': -1,
 'stackingclassifier__final_estimator__min_child_samples': 20,
 'stackingclassifier__final_estimator__min_child_weight': 0.001,
 'stackingclassifier__final_estimator__min_split_gain': 0.0,
 'stackingclassifier__final_estimator__n_estimators': 100,
 'stackingclassifier__final_estimator__n_jobs': -1,
 'stackingclassifier__final_estimator__num_leaves': 31,
 'stackingclassifier__final_estimator__objective': 'multiclass',
 'stackingclassifier__final_estimator__random_state': 0,
 'stackingclassifier__final_estimator__reg_alpha': 0.0,
 'stackingclassifier__final_estimator__reg_lambda': 0.0,
 'stackingclassifier__final_estimator__silent': 'warn',
 'stackingclassifier__final_estimator__subsample': 1.0,
 'stackingclassifier__final_estimator__subsample_for_bin': 200000,
 'stackingclassifier__final_estimator__subsample_freq': 0,
 'stackingclassifier__final_estimator__device': 'gpu',
 'stackingclassifier__final_estimator__metric': 'auc',
 'stackingclassifier__final_estimator': LGBMClassifier(device='gpu', metric='auc', objective='multiclass',
                random_state=0),
 'stackingclassifier__n_jobs': -1,
 'stackingclassifier__passthrough': False,
 'stackingclassifier__stack_method': 'predict_proba',
 'stackingclassifier__verbose': 0,
 'stackingclassifier__LightGBM': LGBMClassifier(device='gpu', metric='auc', objective='multiclass',
                random_state=0),
 'stackingclassifier__XGBoost': XGBClassifier(base_score=None, booster=None, colsample_bylevel=None,
               colsample_bynode=None, colsample_bytree=None,
               enable_categorical=False, eval_metric='auc', gamma=None,
               gpu_id=None, importance_type=None, interaction_constraints=None,
               learning_rate=None, max_delta_step=None, max_depth=None,
               min_child_weight=None, missing=nan, monotone_constraints=None,
               n_estimators=100, n_jobs=-1, num_parallel_tree=None,
               objective='multi:softmax', predictor=None, random_state=0,
               reg_alpha=None, reg_lambda=None, scale_pos_weight=None,
               subsample=None, tree_method='gpu_hist', use_label_encoder=False,
               validate_parameters=None, ...),
 'stackingclassifier__RandomForest': RandomForestClassifier(random_state=0),
 'stackingclassifier__DecisionTree': DecisionTreeClassifier(random_state=0),
 'stackingclassifier__LightGBM__boosting_type': 'gbdt',
 'stackingclassifier__LightGBM__class_weight': None,
 'stackingclassifier__LightGBM__colsample_bytree': 1.0,
 'stackingclassifier__LightGBM__importance_type': 'split',
 'stackingclassifier__LightGBM__learning_rate': 0.1,
 'stackingclassifier__LightGBM__max_depth': -1,
 'stackingclassifier__LightGBM__min_child_samples': 20,
 'stackingclassifier__LightGBM__min_child_weight': 0.001,
 'stackingclassifier__LightGBM__min_split_gain': 0.0,
 'stackingclassifier__LightGBM__n_estimators': 100,
 'stackingclassifier__LightGBM__n_jobs': -1,
 'stackingclassifier__LightGBM__num_leaves': 31,
 'stackingclassifier__LightGBM__objective': 'multiclass',
 'stackingclassifier__LightGBM__random_state': 0,
 'stackingclassifier__LightGBM__reg_alpha': 0.0,
 'stackingclassifier__LightGBM__reg_lambda': 0.0,
 'stackingclassifier__LightGBM__silent': 'warn',
 'stackingclassifier__LightGBM__subsample': 1.0,
 'stackingclassifier__LightGBM__subsample_for_bin': 200000,
 'stackingclassifier__LightGBM__subsample_freq': 0,
 'stackingclassifier__LightGBM__device': 'gpu',
 'stackingclassifier__LightGBM__metric': 'auc',
 'stackingclassifier__XGBoost__objective': 'multi:softmax',
 'stackingclassifier__XGBoost__use_label_encoder': False,
 'stackingclassifier__XGBoost__base_score': None,
 'stackingclassifier__XGBoost__booster': None,
 'stackingclassifier__XGBoost__colsample_bylevel': None,
 'stackingclassifier__XGBoost__colsample_bynode': None,
 'stackingclassifier__XGBoost__colsample_bytree': None,
 'stackingclassifier__XGBoost__enable_categorical': False,
 'stackingclassifier__XGBoost__gamma': None,
 'stackingclassifier__XGBoost__gpu_id': None,
 'stackingclassifier__XGBoost__importance_type': None,
 'stackingclassifier__XGBoost__interaction_constraints': None,
 'stackingclassifier__XGBoost__learning_rate': None,
 'stackingclassifier__XGBoost__max_delta_step': None,
 'stackingclassifier__XGBoost__max_depth': None,
 'stackingclassifier__XGBoost__min_child_weight': None,
 'stackingclassifier__XGBoost__missing': nan,
 'stackingclassifier__XGBoost__monotone_constraints': None,
 'stackingclassifier__XGBoost__n_estimators': 100,
 'stackingclassifier__XGBoost__n_jobs': -1,
 'stackingclassifier__XGBoost__num_parallel_tree': None,
 'stackingclassifier__XGBoost__predictor': None,
 'stackingclassifier__XGBoost__random_state': 0,
 'stackingclassifier__XGBoost__reg_alpha': None,
 'stackingclassifier__XGBoost__reg_lambda': None,
 'stackingclassifier__XGBoost__scale_pos_weight': None,
 'stackingclassifier__XGBoost__subsample': None,
 'stackingclassifier__XGBoost__tree_method': 'gpu_hist',
 'stackingclassifier__XGBoost__validate_parameters': None,
 'stackingclassifier__XGBoost__verbosity': None,
 'stackingclassifier__XGBoost__eval_metric': 'auc',
 'stackingclassifier__RandomForest__bootstrap': True,
 'stackingclassifier__RandomForest__ccp_alpha': 0.0,
 'stackingclassifier__RandomForest__class_weight': None,
 'stackingclassifier__RandomForest__criterion': 'gini',
 'stackingclassifier__RandomForest__max_depth': None,
 'stackingclassifier__RandomForest__max_features': 'auto',
 'stackingclassifier__RandomForest__max_leaf_nodes': None,
 'stackingclassifier__RandomForest__max_samples': None,
 'stackingclassifier__RandomForest__min_impurity_decrease': 0.0,
 'stackingclassifier__RandomForest__min_samples_leaf': 1,
 'stackingclassifier__RandomForest__min_samples_split': 2,
 'stackingclassifier__RandomForest__min_weight_fraction_leaf': 0.0,
 'stackingclassifier__RandomForest__n_estimators': 100,
 'stackingclassifier__RandomForest__n_jobs': None,
 'stackingclassifier__RandomForest__oob_score': False,
 'stackingclassifier__RandomForest__random_state': 0,
 'stackingclassifier__RandomForest__verbose': 0,
 'stackingclassifier__RandomForest__warm_start': False,
 'stackingclassifier__DecisionTree__ccp_alpha': 0.0,
 'stackingclassifier__DecisionTree__class_weight': None,
 'stackingclassifier__DecisionTree__criterion': 'gini',
 'stackingclassifier__DecisionTree__max_depth': None,
 'stackingclassifier__DecisionTree__max_features': None,
 'stackingclassifier__DecisionTree__max_leaf_nodes': None,
 'stackingclassifier__DecisionTree__min_impurity_decrease': 0.0,
 'stackingclassifier__DecisionTree__min_samples_leaf': 1,
 'stackingclassifier__DecisionTree__min_samples_split': 2,
 'stackingclassifier__DecisionTree__min_weight_fraction_leaf': 0.0,
 'stackingclassifier__DecisionTree__random_state': 0,
 'stackingclassifier__DecisionTree__splitter': 'best'}